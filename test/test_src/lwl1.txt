#15
#lwl1
#lwl
#Testing functionality

#initialise memory to be accessed
lui $3, 0xAAAA
ori $3, $3, 0xAAAA
sw $3, 0x20000000($0)


#set reg 24, to be overwritten to some degree
lui $24, 0x5555
ori $24, 0x5555 

#to be used in future calls
lui $3, 0x2000
#load word
lwl $24, 0x0($3)


#set r2 to 0000 0001 if successful
slti $4, $24, 0xAAAAAAAB
or $2, $0, $4

#set reg 24; to be overwritten to some degree
lui $24, 0x5555
ori $24, 0x5555 

#load word
lwl $24, 0x1($3)

#set r2 to 0000 001X if succesful
slti $4, $24, 0xAAAAAA56
sll $4, $4, 0x1
or $2, $2, $4

#set reg 24, to be overwritten to some degree
lui $24, 0x5555
ori $24, 0x5555 

#load word
lwl $24, 0x2($3)

#set r2 to 0000 01XX if succesful
slti $4, $24, 0xAAAA5556
sll $4, $4, 0x2
or $2, $2, $4

#set reg 24, to be overwritten to some degree
lui $24, 0x5555
ori $24, 0x5555 

#load word
lwl $24, 0x3($3)

#set r2 to 0000 1XXX if succesful
slti $4, $24, 0xAA555556
sll $4, $4, 0x3
or $2, $2, $4


jr $0
nop 